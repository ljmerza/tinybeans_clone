# Generated by Django 5.2.6 on 2025-10-01 20:59

from django.db import migrations, models
import hashlib


def migrate_recovery_codes_to_hashed(apps, schema_editor):
    """
    Migrate existing recovery codes to hashed format.
    WARNING: This will invalidate all existing recovery codes.
    Users will need to generate new recovery codes.
    """
    RecoveryCode = apps.get_model('auth_app', 'RecoveryCode')
    # Delete all existing recovery codes since we can't hash them
    # (we don't have the plain text)
    RecoveryCode.objects.all().delete()


def reverse_migration(apps, schema_editor):
    """Cannot reverse - recovery codes are one-way hashed"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('auth_app', '0001_initial'),
    ]

    operations = [
        # 1. Add new lockout fields to TwoFactorSettings
        migrations.AddField(
            model_name='twofactorsettings',
            name='failed_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='twofactorsettings',
            name='locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        
        # 2. Rename totp_secret field for encryption
        migrations.RenameField(
            model_name='twofactorsettings',
            old_name='totp_secret',
            new_name='_totp_secret_encrypted',
        ),
        
        # 3. Increase size for encrypted TOTP secrets
        migrations.AlterField(
            model_name='twofactorsettings',
            name='_totp_secret_encrypted',
            field=models.CharField(blank=True, max_length=255, null=True, db_column='totp_secret'),
        ),
        
        # 4. Add code_hash field for recovery codes
        migrations.AddField(
            model_name='recoverycode',
            name='code_hash',
            field=models.CharField(max_length=64, null=True, blank=True, unique=True),
        ),
        
        # 5. Delete all existing recovery codes (can't hash plain text we don't have)
        migrations.RunPython(migrate_recovery_codes_to_hashed, reverse_migration),
        
        # 6. Remove old code field
        migrations.RemoveField(
            model_name='recoverycode',
            name='code',
        ),
        
        # 7. Make code_hash non-nullable now that old codes are gone
        migrations.AlterField(
            model_name='recoverycode',
            name='code_hash',
            field=models.CharField(max_length=64, unique=True),
        ),
    ]
