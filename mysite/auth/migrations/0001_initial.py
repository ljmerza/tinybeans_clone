# Generated by Django 5.2.6 on 2025-10-26 00:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MagicLoginToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, default='', max_length=64)),
                ('token_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Magic Login Token',
                'verbose_name_plural': 'Magic Login Tokens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecoveryCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(max_length=64, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Recovery Code',
                'verbose_name_plural': 'Recovery Codes',
            },
        ),
        migrations.CreateModel(
            name='TrustedDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=64, unique=True)),
                ('device_name', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('ip_hash', models.CharField(blank=True, default='', max_length=64)),
                ('ua_hash', models.CharField(blank=True, default='', max_length=64)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Trusted Device',
                'verbose_name_plural': 'Trusted Devices',
            },
        ),
        migrations.CreateModel(
            name='TwoFactorAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('method', models.CharField(max_length=20)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_id', models.CharField(blank=True, max_length=64)),
                ('success', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Two-Factor Audit Log',
                'verbose_name_plural': 'Two-Factor Audit Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TwoFactorCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(default='', max_length=64)),
                ('code_preview', models.CharField(blank=True, default='', max_length=6)),
                ('method', models.CharField(max_length=20)),
                ('purpose', models.CharField(choices=[('login', 'Login Verification'), ('setup', 'Setup Verification'), ('disable', 'Disable 2FA')], max_length=20)),
                ('is_used', models.BooleanField(default=False)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=5)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Two-Factor Code',
                'verbose_name_plural': 'Two-Factor Codes',
            },
        ),
        migrations.CreateModel(
            name='TwoFactorSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('preferred_method', models.CharField(choices=[('totp', 'Authenticator App'), ('email', 'Email'), ('sms', 'SMS')], default='totp', max_length=20)),
                ('_totp_secret_encrypted', models.CharField(blank=True, db_column='totp_secret', max_length=255, null=True)),
                ('totp_verified', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('sms_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('backup_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('failed_attempts', models.IntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Two-Factor Settings',
                'verbose_name_plural': 'Two-Factor Settings',
            },
        ),
        migrations.CreateModel(
            name='GoogleOAuthState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_token', models.CharField(db_index=True, help_text='Unique OAuth state token', max_length=128, unique=True)),
                ('code_verifier', models.CharField(help_text='PKCE code verifier', max_length=128)),
                ('redirect_uri', models.URLField(help_text='OAuth redirect URI')),
                ('nonce', models.CharField(help_text='Additional CSRF protection nonce', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When state was created')),
                ('used_at', models.DateTimeField(blank=True, help_text='When state was used', null=True)),
                ('ip_address', models.GenericIPAddressField(help_text='IP address that initiated OAuth')),
                ('user_agent', models.TextField(help_text='User agent that initiated OAuth')),
                ('expires_at', models.DateTimeField(db_index=True, help_text='When state expires (10 min)')),
            ],
            options={
                'verbose_name': 'Google OAuth State',
                'verbose_name_plural': 'Google OAuth States',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['state_token', 'used_at'], name='auth_oauth_state_idx'), models.Index(fields=['expires_at'], name='auth_oauth_expires_idx')],
            },
        ),
    ]
