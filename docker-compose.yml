x-common-env: &django-common-env
  DJANGO_SETTINGS_MODULE: mysite.settings
  DJANGO_DEBUG: ${DJANGO_DEBUG:-1}
  DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-local}
  DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,[::1],web,192.168.1.76}
  POSTGRES_DB: ${POSTGRES_DB:-tinybeans}
  POSTGRES_USER: ${POSTGRES_USER:-tinybeans}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tinybeans}
  POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
  CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
  CELERY_TASK_ALWAYS_EAGER: ${CELERY_TASK_ALWAYS_EAGER:-0}
  EMAIL_BACKEND: ${EMAIL_BACKEND:-django.core.mail.backends.smtp.EmailBackend}
  EMAIL_HOST: ${EMAIL_HOST:-mailpit}
  EMAIL_PORT: ${EMAIL_PORT:-1025}
  EMAIL_USE_TLS: ${EMAIL_USE_TLS:-0}
  EMAIL_USE_SSL: ${EMAIL_USE_SSL:-0}
  ACCOUNT_FRONTEND_BASE_URL: ${ACCOUNT_FRONTEND_BASE_URL:-http://192.168.1.76:3053}
  MINIO_ENDPOINT: ${MINIO_ENDPOINT:-http://minio:9000}
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
  MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-tinybeans-media}
  MINIO_USE_SSL: ${MINIO_USE_SSL:-0}
  MAX_UPLOAD_SIZE: ${MAX_UPLOAD_SIZE:-104857600}
  TWOFA_RATE_LIMIT_MAX: ${TWOFA_RATE_LIMIT_MAX:-0}
  TWOFA_RATE_LIMIT_WINDOW: ${TWOFA_RATE_LIMIT_WINDOW:-0}
  TWOFA_LOCKOUT_ENABLED: ${TWOFA_LOCKOUT_ENABLED:-0}
  RATELIMIT_ENABLE: ${RATELIMIT_ENABLE:-0}
  SMS_PROVIDER: ${SMS_PROVIDER:-console}
  TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-}
  TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-}
  TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER:-}
  OAUTH_STATE_EXPIRATION: ${OAUTH_STATE_EXPIRATION:-600}
  OAUTH_RATE_LIMIT_MAX_ATTEMPTS: ${OAUTH_RATE_LIMIT_MAX_ATTEMPTS:-5}
  OAUTH_RATE_LIMIT_WINDOW: ${OAUTH_RATE_LIMIT_WINDOW:-900}


services:
  web:
    build: .
    command: bash -lc "python manage.py migrate && python manage.py seed_demo_data && python manage.py runserver 0.0.0.0:8000"
    working_dir: /app/mysite
    volumes:
      - ./:/app
    environment:
      <<: *django-common-env
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID:-your-client-id.apps.googleusercontent.com}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET:-your-client-secret}
      GOOGLE_OAUTH_REDIRECT_URI: ${GOOGLE_OAUTH_REDIRECT_URI:-http://192.168.1.76:3053/auth/google/callback}
    depends_on:
      - redis
      - postgres
    expose:
      - "8000"
    ports:
      - "8100:8000"

  # Vite dev server for React frontend
  web-frontend:
    image: node:20-alpine
    command: sh -c "npm install && npm run dev"
    working_dir: /app
    volumes:
      - ./web:/app
    ports:
      - "3053:3000"
    environment:
      NODE_ENV: development
      VITE_API_BASE: ${VITE_API_BASE:-http://192.168.1.76:8100/api}
    stdin_open: true
    tty: true

  celery-worker-1:
    build: .
    command: celery -A mysite worker -l INFO -n worker1@%h -Q email,sms,media,maintenance
    working_dir: /app/mysite
    volumes:
      - ./:/app
    environment:
      <<: *django-common-env
    depends_on:
      - redis
      - postgres

  celery-worker-2:
    build: .
    command: celery -A mysite worker -l INFO -n worker2@%h -Q email,sms,media,maintenance
    working_dir: /app/mysite
    volumes:
      - ./:/app
    environment:
      <<: *django-common-env
    depends_on:
      - redis
      - postgres

  celery-worker-3:
    build: .
    command: celery -A mysite worker -l INFO -n worker3@%h -Q email,sms,media,maintenance
    working_dir: /app/mysite
    volumes:
      - ./:/app
    environment:
      <<: *django-common-env
    depends_on:
      - redis
      - postgres

  celery-beat:
    build: .
    command: celery -A mysite beat -l INFO
    working_dir: /app/mysite
    volumes:
      - ./:/app
    environment:
      <<: *django-common-env
    depends_on:
      - redis
      - postgres

  flower:
    build: .
    command: celery -A mysite flower --url-prefix=flower --port=5555 --address=0.0.0.0 --persistent --db=/data/flower.db
    working_dir: /app/mysite
    volumes:
      - ./:/app
      - flower_data:/data
    environment:
      <<: *django-common-env
    depends_on:
      - redis
      - postgres
    expose:
      - "5555"
    ports:
      - "5656:5555"

  redis:
    image: redis:7-alpine
    expose:
      - "6379"

  redisinsight:
    image: redis/redisinsight:latest
    ports:
      - "8182:5540"
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tinybeans}
      POSTGRES_USER: ${POSTGRES_USER:-tinybeans}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tinybeans}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5532:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tinybeans.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5150:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # MinIO - S3-compatible object storage for local development
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    expose:
      - "9000"
      - "9001"
    ports:
      - "9220:9000"  # API
      - "9221:9001"  # Console

  # Initialize MinIO bucket
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/tinybeans-media || true;
      /usr/bin/mc policy set public myminio/tinybeans-media || true;
      echo 'MinIO bucket setup complete';
      "

  # Dashy - Dashboard for all services
  dashy:
    image: lissy93/dashy:latest
    ports:
      - "4100:8080"
    volumes:
      - ./dashy-config.yml:/app/user-data/conf.yml
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    restart: unless-stopped
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP server

volumes:
  postgres_data:
  pgadmin_data:
  redisinsight_data:
  minio_data:
  flower_data:
